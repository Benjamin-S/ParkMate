@model Web.Models.SearchResultViewModel
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Search Result";
}

@section Styles
{
    <link href="@Url.Content("~/css/SearchResult.css")" rel="stylesheet" type="text/css" />
}

@{
    if (!Model.Result.Success)
    {
        <div class="alert alert-danger" role="alert">
            @Model.Result.Message
        </div>
    }
    else if (!Model.Result.Payload.Any())
    {
        <div class="alert alert-info" role="alert">
            Your search returned no results.
        </div>
    }
    else
    {
        <div id="map" class="d-block")></div> 
        <div class="container my-3">
            <div class="row mx-auto my-auto">
                <div id="cardCarousel" class="carousel slide w-100" data-ride="carousel" data-interval="false">
                    <div class="carousel-inner" id="cardCarouselRow" role="listbox">
                        @{
                            foreach (var space in Model.Result.Payload)
                            {                                
                                <div class="carousel-item">
                                    <div class="card col-md-3">
                                        <img class="card-img-top img-fluid" src="/imageuploads/@space.ImageURL" alt="No image">                                       
                                        <div class="card-body">
                                            <h4 class="card-title text-truncate d-block">@space.Title</h4>
                                            <hr/>
                                            <p class="card-text text-truncate d-block">@space.Description</p>
                                            <p class="card-text">Distance: @(space.DistanceInMeters)m.</p>                                      
                                            <a class="btn btn-primary">Book</a>
                                            <a class="btn btn-primary float-right" asp-controller="ViewParkingSpace" asp-action="Index" asp-route-id="@space.ParkingSpaceId">View</a>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div> 
                    <br/>
                    <div class="d-flex justify-content-center">                
                        <a class="btn btn-primary mx-1 carousel-button" href="#cardCarousel" role="button" data-slide="prev"> < </a>
                        <a class="btn btn-primary mx-1 carousel-button" href="#cardCarousel" role="button" data-slide="next"> > </a>
                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts
{
    <script>
        $(document).ready(function() {
            $("#cardCarouselRow .carousel-item:first").addClass("active");
        });

        if ($('.carousel .carousel-item').length <= 4) {
            $('.carousel-button').hide();
        }

        $('.carousel .carousel-item').each(function() {
            var next = $(this).next();

            for (var i = 0; i < 3; i++) {
                if (!next.length && ($('.carousel .carousel-item').length > 4)) {
                    next = $(this).siblings('.carousel-item:first');
                }
                next.children(':first-child').clone().appendTo($(this));
                next = next.next();
            }
        });

        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'),
                {
                    center: { lat: @Model.PrevInput.Latitude, lng: @Model.PrevInput.Longitude },
                    zoom: 16
                });
            
            @{
                if (Model.Result.Payload != null)
                {       
                    foreach (var result in Model.Result.Payload)
                    {
                        <text>           
                            var latLng = new google.maps.LatLng(@result.Location.Coordinates.Latitude,
                                @result.Location.Coordinates.Longitude);
                            var marker = new google.maps.Marker({
                                position: latLng,
                                map: map,
                                title: '@result.Title'
                            });
                        </text>
                    }
                }
            }
            
        }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@(Configuration["GoogleMaps:ServiceApiKey"])&callback=initMap"
            async defer></script>
}
